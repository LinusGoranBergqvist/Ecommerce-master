@model Ecommerce_Project.Models.ViewModels.OrderCartItem

@{
    ViewBag.Title = "Checkout";
}

<div class="container mt-4">
    <h2>@ViewBag.Title</h2>

    <h3 class="mt-4">Order:</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Produkt</th>
                <th>Pris</th>
                <th>Antal</th>
                <th>Totalt</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CartItems)
            {
                if (item.Product != null)
                {
                    <tr>
                        <td>@item.Product.Name</td>
                        <td>@item.Product.PriceSEK kr</td>
                        <td>@item.Quantity</td>
                        <td>@(item.Product.PriceSEK * item.Quantity) kr</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h5>Fraktkostnad: @Model.Order.ShippingRate kr</h5>
    <h4>Totalt: @(Model.CartItems.Sum(item => item.Product.PriceSEK * item.Quantity) + @Model.Order.ShippingRate) kr</h4>

    <h3 class="mt-4">Betalningsinformation</h3>
    @using (Html.BeginForm("SubmitOrder", "Checkout", FormMethod.Post, new { @class = "mt-4" }))
    {
        @Html.AntiForgeryToken()

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">Förnamn:</label>
                @Html.TextBoxFor(model => model.Order.FirstName, new { @class = "form-control", required = "required" })
            </div>

            <div class="col-md-6">
                <label class="form-label">Efternamn:</label>
                @Html.TextBoxFor(model => model.Order.LastName, new { @class = "form-control", required = "required" })
            </div>

            <div class="col-md-6">
                <label class="form-label">Email:</label>
                @Html.TextBoxFor(model => model.Order.Email, new { @class = "form-control", required = "required" })
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Leveransadress:</label>
            @Html.TextBoxFor(model => model.Order.DeliveryAdress, new { @class = "form-control", required = "required" })
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label class="form-label">Kortnummer:</label>
                @Html.TextBoxFor(model => model.Order.CardNumber, new { @class = "form-control", required = "required", pattern = "[0-9]{16}", title = "Please enter a valid 16-digit card number" })
            </div>

            <div class="col-md-3">
                <label class="form-label">Utgångsdatum:</label>
                @Html.EditorFor(model => model.Order.ExpireDate, new { htmlAttributes = new { type = "month", @class = "form-control", required = "required" } })
            </div>

            <div class="col-md-3">
                <label class="form-label">CVC:</label>
                @Html.TextBoxFor(model => model.Order.CVC, new { @class = "form-control", required = "required", pattern = "[0-9]{3}", title = "Please enter a valid 3-digit CVC number" })
            </div>
        </div>

        @*Skickar med Cartitems till SubmitOrder().*@
        @for (int i = 0; i < Model.CartItems.Count; i++)
        {
            @Html.HiddenFor(model => model.CartItems[i].Id)
            @Html.HiddenFor(model => model.CartItems[i].Quantity)
            @Html.HiddenFor(model => model.CartItems[i].ProductId)
            @Html.HiddenFor(model => model.CartItems[i].Product.Name)
            @Html.HiddenFor(model => model.CartItems[i].Product.PriceSEK)
            @Html.HiddenFor(model => model.CartItems[i].Product.PriceEUR)
            @Html.HiddenFor(model => model.CartItems[i].CartId)
        }

        @Html.HiddenFor(model => model.CartId)

        <button type="submit" class="btn btn-primary">Skicka Beställning</button>
    }
</div>
